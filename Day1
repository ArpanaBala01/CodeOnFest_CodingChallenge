// 1. Chef and Array
/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{   
	    try{
		// your code goes here
		Scanner sc = new Scanner(System.in);
		int x = sc.nextInt();
		int[] array = new int[x];
		
		for(int i=0; i<x; i++){
		    array[i] = sc.nextInt();
		}
		int k = sc.nextInt();
		Arrays.sort(array);
		System.out.println(array[x-1]);
		System.out.println(array[x-k]);
	    }
	    catch(Exception e){};
	}
}

// 2. Maximum Subarray

class Solution {
    public int maxSubArray(int[] nums) {
        
        if (nums.length == 0){
            return 0;
         }
        int prev = nums[0];
        int cur = nums[0];
        int max = nums[0];
        
        for (int i = 1; i < nums.length; i++){
           if (prev > 0){
              cur = prev + nums[i];
           }  
           else{
              cur = nums[i];
           }
         max = Math.max(max, cur);
         prev = cur; 
       }
    
    return max;
    }  
 }
 
 // 3. Find all duplicates in an Array
 
class Solution {
    public List<Integer> findDuplicates(int[] nums) {
         
        List<Integer> list = new ArrayList<>();
		for (int i = 0; i < nums.length; i++) {
			int n=Math.abs(nums[i]);
			if (nums[n-1] < 0) {
				list.add(n);
			} else {
				nums[n-1] = -nums[n-1];
			}
		}
		return list;
    }
}

